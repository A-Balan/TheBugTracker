@using TheBugTracker.Models.Enums;
@using TheBugTracker.Services.Interfaces;
@model IEnumerable<TheBugTracker.Models.Project>
@inject IBTFileService _BTFileService

@{
    ViewData["Title"] = "Index";
}

@section Scripts{
<!-- Javascript -->
<script src="~/vendors/dataTable/datatables.min.js"></script>
<script>
    $("#myTable").DataTable({responsive: true})
</script>
}

<h1>Index</h1>
<p>
    <a asp-action="Create">Create New</a>
</p>



<table id="myTable" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
           
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                img
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Company)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
<img src="@_BTFileService.ConvertByteArrayToFile(@item?.ImageFileData!,@item?.ImageFileType!,DefaultImage.BTUserImage)" />
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectPriority.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="AssignPM" asp-route-id="@item.Id">Assign PM</a> |
                    @if (item.Archived == true)
                    {
                        <a asp-action="Restore" asp-route-id="@item.Id">Restore</a>
                    }
                    else
                    {
                        <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                    }
                </td>
            </tr>
        }
        ...
    </tbody>
</table>


